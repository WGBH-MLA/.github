name: 🐳 Build and publish a Docker image

on:
  workflow_call:
    inputs:
      registry:
        description: The container registry to deploy to
        type: string
        default: ghcr.io
      target:
        description: The docker image to target
        type: string
      image_name:
        description: The name of the image to  publish
        type: string
        default: ${{ github.repository }}
      file:
        description: The Dockerfile to build
        type: string
        default: Dockerfile
      tags:
        description: The tags to apply to the image
        type: string
      buildx:
        description: Whether to use buildx
        type: boolean
        default: false
      platforms:
        description: The build architecture platforms
        type: string
        default: linux/amd64

jobs:
  build-and-push-image:
    name: 🧱 Build and push image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 📰 Checkout repository
        uses: actions/checkout@v4

      - name: 🦤 Set up QEMU
        if: ${{ inputs.buildx }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ inputs.platforms }}

      - name: 📦 Setup Docker Buildx
        if: ${{ inputs.buildx }}
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ inputs.platforms }}

      - name: 🏷️ Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          tags: ${{ inputs.tags }}

      - name: 🔏 Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: ${{ inputs.target }}
          file: ${{ inputs.file }}
          platforms: ${{ inputs.platforms }}
